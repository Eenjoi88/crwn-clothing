{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"test\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/Eenjoi/Documents/Code/Projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","collectionsMap","snapshot","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCY,QAAlC,CAAjC;AACA,UAAMd,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOE,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACI,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,SAAS,CACXO,eAAe,CAACa,uBADL,EAEXZ,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions';\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"test\");\n\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapShot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}