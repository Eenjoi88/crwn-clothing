{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBiUBIceBPEKwAPFUo6ZTzaS2qo5nfG0tk\",\n  authDomain: \"crwn-db-4b05e.firebaseapp.com\",\n  projectId: \"crwn-db-4b05e\",\n  storageBucket: \"crwn-db-4b05e.appspot.com\",\n  messagingSenderId: \"233666633012\",\n  appId: \"1:233666633012:web:602397a68861624cc69961\",\n  measurementId: \"G-PJCTT1D485\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndItems = (collectionKey, objectsToAdd);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Eenjoi/Documents/Code/Projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndItems","collectionKey","objectsToAdd","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUER,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACF;;AACD,SAAOf,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMgB,qBAAqB,IAAIC,aAAa,EAAEC,YAAnB,CAA3B;AAEP,OAAO,MAAMC,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMlB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMmB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBiUBIceBPEKwAPFUo6ZTzaS2qo5nfG0tk\",\n    authDomain: \"crwn-db-4b05e.firebaseapp.com\",\n    projectId: \"crwn-db-4b05e\",\n    storageBucket: \"crwn-db-4b05e.appspot.com\",\n    messagingSenderId: \"233666633012\",\n    appId: \"1:233666633012:web:602397a68861624cc69961\",\n    measurementId: \"G-PJCTT1D485\"\n  };\n\n  firebase.initializeApp(config);\n\n  export const createUserProfileDocument = async(userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists){\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        })\n      } catch (error) {\n          console.log('error creating user', error.message);\n      }\n    }\n    return userRef;\n  }\n\n  export const addCollectionAndItems = (collectionKey, objectsToAdd)\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({ prompt: 'select_account' });\n\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}