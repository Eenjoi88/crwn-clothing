{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{clearItemFromCart,addItem as _addItem,removeItem as _removeItem}from'../../redux/cart/cart.actions';import'./checkout-item.styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckoutItem=function CheckoutItem(_ref){var cartItem=_ref.cartItem,clearItem=_ref.clearItem,addItem=_ref.addItem,removeItem=_ref.removeItem;var name=cartItem.name,imageUrl=cartItem.imageUrl,price=cartItem.price,quantity=cartItem.quantity;return/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:\"item\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:name}),/*#__PURE__*/_jsxs(\"span\",{className:\"quantity\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"arrow\",onClick:function onClick(){return removeItem(cartItem);},children:\"\\u276E\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:quantity}),/*#__PURE__*/_jsx(\"div\",{className:\"arrow\",onClick:function onClick(){return addItem(cartItem);},children:\"\\u276F\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"price\",children:price}),/*#__PURE__*/_jsx(\"div\",{className:\"remove-button\",onClick:function onClick(){return clearItem(cartItem);},children:\"\\u2715\"})]});};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{clearItem:function clearItem(item){return dispatch(clearItemFromCart(item));},addItem:function addItem(item){return dispatch(_addItem(item));},removeItem:function removeItem(item){return dispatch(_removeItem(item));}};};export default connect(null,mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/Users/Eenjoi/Documents/Code/Projects/crwn-clothing/client/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","connect","clearItemFromCart","addItem","removeItem","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,CAA4BC,OAAO,GAAPA,CAAAA,QAA5B,CAAqCC,UAAU,GAAVA,CAAAA,WAArC,KAAuD,+BAAvD,CAIA,MAAO,6BAAP,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkD,IAA/CC,CAAAA,QAA+C,MAA/CA,QAA+C,CAArCC,SAAqC,MAArCA,SAAqC,CAA1BJ,OAA0B,MAA1BA,OAA0B,CAAjBC,UAAiB,MAAjBA,UAAiB,CACnE,GAAQI,CAAAA,IAAR,CAA4CF,QAA5C,CAAQE,IAAR,CAAcC,QAAd,CAA4CH,QAA5C,CAAcG,QAAd,CAAwBC,KAAxB,CAA4CJ,QAA5C,CAAwBI,KAAxB,CAA+BC,QAA/B,CAA4CL,QAA5C,CAA+BK,QAA/B,CACA,mBACI,aAAK,SAAS,CAAC,eAAf,wBACI,YAAK,SAAS,CAAC,iBAAf,uBACA,YAAK,GAAG,CAAEF,QAAV,CAAoB,GAAG,CAAC,MAAxB,EADA,EADJ,cAII,aAAM,SAAS,CAAC,MAAhB,UAAwBD,IAAxB,EAJJ,cAKI,cAAM,SAAS,CAAC,UAAhB,wBACI,YAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAACE,QAAD,CAAhB,EAAhC,oBADJ,cAII,aAAM,SAAS,CAAC,OAAhB,UAAyBK,QAAzB,EAJJ,cAKI,YAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAE,yBAAMR,CAAAA,OAAO,CAACG,QAAD,CAAb,EAAhC,oBALJ,GALJ,cAcI,aAAM,SAAS,CAAC,OAAhB,UAAyBI,KAAzB,EAdJ,cAeI,YAAK,SAAS,CAAC,eAAf,CAA+B,OAAO,CAAE,yBAAKH,CAAAA,SAAS,CAACD,QAAD,CAAd,EAAxC,oBAfJ,GADJ,CAqBH,CAvBD,CAyBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCN,SAAS,CAAE,mBAAAO,IAAI,QAAID,CAAAA,QAAQ,CAACX,iBAAiB,CAACY,IAAD,CAAlB,CAAZ,EADqB,CAEpCX,OAAO,CAAE,iBAAAW,IAAI,QAAID,CAAAA,QAAQ,CAACV,QAAO,CAACW,IAAD,CAAR,CAAZ,EAFuB,CAGpCV,UAAU,CAAE,oBAAAU,IAAI,QAAID,CAAAA,QAAQ,CAACT,WAAU,CAACU,IAAD,CAAX,CAAZ,EAHoB,CAAL,EAAnC,CAMA,cAAeb,CAAAA,OAAO,CAClB,IADkB,CAElBW,kBAFkB,CAAP,CAGTP,YAHS,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\n\n\n\nimport './checkout-item.styles.scss';\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n    const { name, imageUrl, price, quantity } = cartItem;\n    return (\n        <div className='checkout-item'>\n            <div className='image-container'>\n            <img src={imageUrl} alt='item' />\n            </div>\n            <span className='name'>{name}</span>\n            <span className='quantity'>\n                <div className='arrow' onClick={() => removeItem(cartItem)}>\n                    &#10094;\n                </div>\n                <span className='value'>{quantity}</span>\n                <div className='arrow' onClick={() => addItem(cartItem)}>\n                    &#10095;\n                </div>\n            </span>\n            <span className='price'>{price}</span>\n            <div className='remove-button' onClick={()=> clearItem(cartItem) }>\n                &#10005;\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    clearItem: item => dispatch(clearItemFromCart(item)),\n    addItem: item => dispatch(addItem(item)),\n    removeItem: item => dispatch(removeItem(item))\n})\n\nexport default connect(\n    null, \n    mapDispatchToProps\n    )(CheckoutItem);"]},"metadata":{},"sourceType":"module"}