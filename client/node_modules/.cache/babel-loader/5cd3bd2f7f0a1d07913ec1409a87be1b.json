{"ast":null,"code":"var _jsxFileName = \"/Users/Eenjoi/Documents/Code/Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshopToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionSnapshopToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Eenjoi/Documents/Code/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionSnapshopToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,uEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzCT,MAAAA,8BAA8B,CAACS,QAAD,CAA9B;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEhB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEf;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAlBoC;;AAqBvC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,iBAAiB,EAAEe,cAAc,IAAID,QAAQ,CAACd,iBAAiB,CAACe,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshopToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionSnapshopToMap(snapshot)\n    })\n  }\n\n  render () {\n    const { match } = this.props;\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    );\n  }\n} \n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}